import { AboutSlint, VerticalBox, Palette, HorizontalBox, Button, CheckBox, ScrollView, LineEdit, ComboBox } from "std-widgets.slint";
import { Pipe } from "../structs.slint";

export component PipeEdit inherits Rectangle {
    in property <Pipe> pipe;
    property <Pipe> new_pipe: pipe;

    callback cancel();
    callback fix_text(string) -> string;

    callback remove(Pipe/* Pipe to remove */);
    callback change(Pipe/* From... */, Pipe /* To... */);

    VerticalLayout {
        HorizontalBox {
            Button {
                text: "Cancel/Back";
                clicked => {
                    cancel()
                }
            }
            Button {
                text: "Reset";
                clicked => {
                    vs.text = pipe.sink;
                    vm.text = pipe.source;
                    cc.current-value = pipe.channel
                }
                enabled: vs.text != pipe.sink
                      || vm.text != pipe.source
                      || cc.current-value != pipe.channel;
            }
            Rectangle {}
        }

        Rectangle {}

        VerticalBox {
            padding: 25px;

            Text { text: "Virtual Speaker"; }
            vs:= LineEdit {
                text: pipe.sink;
                changed text => {
                    self.text = fix_text(self.text);
                    new_pipe.sink = self.text;
                }
            }
            
            Text { text: "Virtual Microphone"; }
            vm:= LineEdit {
                text: pipe.source;
                changed text => {
                    self.text = fix_text(self.text);
                    new_pipe.source = self.text;
                }
            }

            Text { text: "Channel"; }
            HorizontalLayout {
                cc:= ComboBox {
                    width: self.min-width;
                    model: [
                        "Mono",
                        "Stereo"
                    ];
                    current-value: pipe.channel;
                    changed current-value => {
                        new_pipe.channel = self.current-value;
                    }
                }
                Rectangle {}
            }
        }

        Rectangle {}

        HorizontalBox {

            Rectangle {}
            Button {
                text: "Remover";
                clicked => {remove(pipe)}
            }
            Button {
                text: "Apply";
                enabled: vs.text != pipe.sink
                      || vm.text != pipe.source
                      || cc.current-value != pipe.channel;
                clicked => {
                    change(pipe, new_pipe)
                }
            }
            Rectangle {}
        }
    }
}